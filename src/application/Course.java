package application;

import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;

public class Course {
	private SimpleStringProperty courseName, year, courseDescription, 
	courseNum, semester, instructorLastName, dept;
	private SimpleIntegerProperty sectionID, instructorID, enrollid;

	/**
	 * @param cName a Course Name
	 * @param descr a Course Description
	 * @param cNum a CourseNumber (CS903)
	 * @param sem a course semester
	 * @param yr a course year
	 * @param sID a sectionNumber (generated by file manager) 
	 * @param i an Instructor object
	 */
	
	public Course(String cName, String descr, String cNum, String sem, int yr, int sID, String iLName, int iID)
	{
		if (cName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course name");
		}
		if (descr.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a description");
		}
		if (cNum.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course number");
		}
		if (sem.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a semester");
		}
		if (iLName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter Instructor last name");
		}
		
		if(yr <= 0)
		{
			throw new IllegalArgumentException("Must enter a valid year");
		}
		if (iID < 0)
		{
			throw new IllegalArgumentException("Must enter a valid ID");
		}
		if(sID < 0)
		{
			throw new IllegalArgumentException("Must enter a valid section number");
		}
		this.courseName = new SimpleStringProperty(cName);
		this.courseDescription = new SimpleStringProperty(descr);
		this.courseNum = new SimpleStringProperty(cNum);
		this.semester = new SimpleStringProperty(sem);
		this.instructorLastName = new SimpleStringProperty(iLName);
		
		this.year = new SimpleStringProperty(Integer.toString(yr));
		this.instructorID = new SimpleIntegerProperty(iID);
		this.sectionID = new SimpleIntegerProperty(sID);
	}
	public Course(String cName, String descr, String cNum, String sem, int yr, int sID, String i, String dept)
	{
		if (cName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course name");
		}
		if (descr.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a description");
		}
		if (cNum.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course number");
		}
		if (sem.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a semester");
		}
		if (i.isEmpty())
		{
			throw new IllegalArgumentException("Must enter Instructor last name");
		}
		if(yr <= 0)
		{
			throw new IllegalArgumentException("Must enter a valid year");
		}
		if(sID < 0)
		{
			throw new IllegalArgumentException("Must enter a valid section number");
		}
		
		this.courseName = new SimpleStringProperty(cName);
		this.courseDescription = new SimpleStringProperty(descr);
		this.courseNum = new SimpleStringProperty(cNum);
		this.semester = new SimpleStringProperty(sem);
		this.instructorLastName = new SimpleStringProperty(i);
		
		this.year = new SimpleStringProperty(Integer.toString(yr));
		
		this.sectionID = new SimpleIntegerProperty(sID);
		this.dept = new SimpleStringProperty(dept);


	}
	
	public Course(String cName, String descr, String cNum, String sem, int yr, String insLastName, String dept)
	{
		if (cName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course name");
		}
		if (descr.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a description");
		}
		if (cNum.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course number");
		}
		if (sem.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a semester");
		}
		if (insLastName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter Instructor last name");
		}
		if(yr <= 0)
		{
			throw new IllegalArgumentException("Must enter a valid year");
		}

	

		
		this.courseName = new SimpleStringProperty(cName);
		this.courseDescription = new SimpleStringProperty(descr);
		this.courseNum = new SimpleStringProperty(cNum);
		this.semester = new SimpleStringProperty(sem);
		this.instructorLastName = new SimpleStringProperty(insLastName);
		this.dept = new SimpleStringProperty(dept);
		this.year = new SimpleStringProperty(Integer.toString(yr));

		
	}
	/**
	 * 
	 * @param cName a Course Name
	 * @param descr a Course Description
	 * @param cNum a CourseNumber (CS903)
	 * @param sem a course semester
	 * @param yr a course year
	 * @param i an Instructor object
	 */
	public Course(String cName, String descr, String cNum, String sem, int yr, Instructor i)
	{
		if (cName.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course name");
		}
		if (descr.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a description");
		}
		if (cNum.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a course number");
		}
		if (sem.isEmpty())
		{
			throw new IllegalArgumentException("Must enter a semester");
		}
		if (i.getLastName().isEmpty())
		{
			throw new IllegalArgumentException("Must enter Instructor last name");
		}
		if(yr <= 0)
		{
			throw new IllegalArgumentException("Must enter a valid year");
		}
		if (i.getInstructorID() < 0)
		{
			throw new IllegalArgumentException("Must enter a valid ID");
		}
	
		
		this.courseName = new SimpleStringProperty(cName);
		this.courseDescription = new SimpleStringProperty(descr);
		this.courseNum = new SimpleStringProperty(cNum);
		this.semester = new SimpleStringProperty(sem);
		this.instructorLastName = new SimpleStringProperty(i.getLastName());
		
		this.year = new SimpleStringProperty(Integer.toString(yr));
		this.instructorID = new SimpleIntegerProperty(i.getInstructorID());
			
	}
	
	public Course(String cName, String cNum, int sectionid, int enrollid )
	{
		
		this.courseName = new SimpleStringProperty(cName);
		this.courseNum = new SimpleStringProperty(cNum);
		this.sectionID = new SimpleIntegerProperty(sectionid);
		this.enrollid = new SimpleIntegerProperty(enrollid);

		

		
		
	}
	
	public void setCourseName(String cName)
	{
		this.courseName.set(cName);
	}
	
	public void setCourseDescription(String d)
	{
		this.courseDescription.set(d);
	}
	
	public void setCourseNum(String cNum)
	{
		this.courseNum.set(cNum);
	}
	
	public void setSemester(String s)
	{
		this.semester.set(s);
	}
	
	
	public void setYear(int y)
	{
		this.year.set(Integer.toString(y));
	}
	
	public void setSectionID(int sID)
	{
		this.sectionID.set(sID);
	}
	
	public void setInstructor(Instructor i)
	{
		
		this.instructorLastName.set(i.getLastName());
		this.instructorID.set(i.getInstructorID());
	}
	
	
	public String getCourseName() {return courseName.get();}
	public String getCourseDescription() {return courseDescription.get();}
	public String getCourseNum() {return courseNum.get();}
	public String getSemester() {return semester.get();}
	public String getInstructorLastName() {return instructorLastName.get();}
	public String getDepartment() {return dept.get();}
	public int getInstructorID() {return instructorID.get();}
	public String getYear() {return year.get();}
	public int getSectionID() {return sectionID.get();}
	public int getEnrollmentID() {return enrollid.get();}
	public String toString()
	{
		String message;
		message = String.format("Course Name: %s"
				+ "\nCourse Description: %s"
				+ "\nCourse Number: %s"
				+ "\nSemester: %s"
				+ "\nYear: %d"
				+ "\nInstructor Last Name: %s"
				+ "\nInstructor ID: %d", courseName, courseDescription, courseNum, semester, year,
				instructorLastName, instructorID);
		return message;
	}

}
